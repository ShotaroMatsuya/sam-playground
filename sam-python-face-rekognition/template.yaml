AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-python-face-rekognition

  Sample SAM Template for sam-python-face-rekognition

Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    Runtime: python3.9
    Architectures:
      - x86_64
    Layers:
      - !Ref MyLayersPIL
    Environment:
      Variables:
        DYNAMODB_TABLE: !Ref Table
        REGION_NAME: !Ref Region

Parameters:
  Table:
    Type: String
    Default: Faces
  Region:
    Type: String
    Default: ap-northeast-1

Resources:
  AddFaceRekognitionFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/
      Description: An Amazon S3 trigger that uses rekognition APIs to detect faces
      Handler: app.lambda_handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: 's3:*'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'rekognition:CompareFaces'
                - 'rekognition:DetectFaces'
                - 'rekognition:DetectLabels'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'rekognition:CreateCollection'
                - 'rekognition:IndexFaces'
              Resource: '*'
      Events:
        AddFace:
          Type: S3
          Properties:
            Bucket: !Ref SrcBucket
            Events: s3:ObjectCreated:*
  ListFacesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/
      Handler: app.list_faces
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref Table
      Events:
        ListFaces:
          Type: Api
          Properties:
            Path: /faces
            Method: get

  FacesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      TableName: !Ref Table

  SrcBucket:
    Type: AWS::S3::Bucket

  MyLayersPIL:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: 'pillow/'
      CompatibleRuntimes:
        - python3.9
    Metadata:
      BuildMethod: python3.9
Outputs:
  ListFacesApi:
    Description: 'API Gateway endpoint URL for Prod stage for ListFaces function'
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/faces/'
  GetFacesFunction:
    Description: 'List Faces Lambda Function ARN'
    Value: !GetAtt ListFacesFunction.Arn
